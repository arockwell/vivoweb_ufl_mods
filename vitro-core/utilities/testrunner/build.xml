<?xml version="1.0" encoding="UTF-8"?>

<!--
Copyright (c) 2010, Cornell University
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright notice,
      this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright notice,
      this list of conditions and the following disclaimer in the documentation
      and/or other materials provided with the distribution.
    * Neither the name of Cornell University nor the names of its contributors
      may be used to endorse or promote products derived from this software
      without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<!-- ====================================================================== 
     Build script for the Selenium test runner.
     ====================================================================== -->

<project name="acceptanceTests" default="describe" basedir=".">

	<property name="source.dir" location="${basedir}/src" />
	<property name="lib.dir" location="${basedir}/lib" />
	<property name="test.dir" location="${basedir}/test" />
	<property name="build.dir" value="${basedir}/.build" />

	<!-- ================================= 
          target: describe              
         ================================= -->
	<target name="describe" description="--> Describe the targets (this is the default).">
		<echo>
all      - Runs "clean", then "run".
clean    - Delete all artifacts so the next build will be from scratch.
compile  - Compile the Java source files.
test     - Compile and run the JUnit tests.
run      - Run the tester.
	    </echo>
	</target>


	<!-- ================================= 
          target: all              
         ================================= -->
	<target name="all"
	        depends="clean, run"
	        description="--> Do a clean build and execute the selenium runner.">

	</target>

	<!-- ================================= 
          target: clean              
         ================================= -->
	<target name="clean" description="--> Remove any artifacts from previous builds.">
		<delete dir="${build.dir}" />
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: prepare                      
         - - - - - - - - - - - - - - - - - -->
	<target name="prepare">
		<mkdir dir="${build.dir}" />
	</target>

	<!-- ================================= 
          target: compile              
         ================================= -->
	<target name="compile" depends="prepare" description="--> Compile the selenium runner.">
		<javac srcdir="${source.dir}"
		       destdir="${build.dir}"
		       debug="true"
		       deprecation="true"
		       optimize="true"
		       source="1.6">
		</javac>

	</target>

	<!-- ================================= 
          target: test              
         ================================= -->
	<target name="test"
	        depends="compile"
	        description="--> Run unit tests against the selenium runner code.">
		<javac srcdir="${test.dir}"
		       destdir="${build.dir}"
		       debug="true"
		       deprecation="true"
		       optimize="false"
		       source="1.6">
			<classpath>
				<pathelement location="${build.dir}" />
				<pathelement location="${lib.dir}/junit-4.8.1.jar" />
			</classpath>
		</javac>

		<junit printsummary="no" haltonfailure="yes">
			<classpath>
				<pathelement location="${build.dir}" />
				<pathelement location="${lib.dir}/junit-4.8.1.jar" />
			</classpath>

			<formatter type="brief" />

			<batchtest fork="yes" todir="${build.dir}">
				<fileset dir="test">
					<include name="**/*Test*.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>

	<!-- ================================= 
          target: run              
         ================================= -->
	<target name="run" depends="test" description="--> Execute the selenium runner.">
		<property name="acceptance.dir" location="${basedir}" />

		<property name="acceptance.properties.file"
		          location="${acceptance.dir}/acceptance_tests.properties" />

		<condition property="acceptance.interactive.arg" value="interactive" else="">
			<not>
				<istrue value="${acceptance.batch}" />
			</not>
		</condition>

		<java classname="edu.cornell.mannlib.vitro.utilities.testrunner.SeleniumRunner"
		      fork="yes"
		      dir="${acceptance.dir}"
		      failonerror="true">
			<classpath location="${build.dir}" />
			<arg file="${acceptance.properties.file}" />
			<arg value="${acceptance.interactive.arg}" />
		</java>
	</target>

</project>